// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoGestion_Ta.Context;

namespace ProyectoGestion_Ta.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230727170216_bdproyectov1")]
    partial class bdproyectov1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Capacitacion", b =>
                {
                    b.Property<int>("PkCapacitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("datetime");

                    b.Property<string>("TipoCapacitacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkCapacitacion");

                    b.ToTable("Capacitaciones");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Cargo", b =>
                {
                    b.Property<int>("PkCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkCargo");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Direccion", b =>
                {
                    b.Property<int>("PkEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Calle")
                        .HasColumnType("int");

                    b.Property<int>("Lote")
                        .HasColumnType("int");

                    b.Property<int>("Region")
                        .HasColumnType("int");

                    b.HasKey("PkEmpleado");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Empleado", b =>
                {
                    b.Property<int>("PkEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Salario")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkEmpleado");

                    b.HasIndex("CargoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.EmpleadoCapacitacion", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("CapacitacionId")
                        .HasColumnType("int");

                    b.HasKey("EmpleadoId", "CapacitacionId");

                    b.HasIndex("CapacitacionId");

                    b.ToTable("empleadoCapacitaciones");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Permiso", b =>
                {
                    b.Property<int>("PkPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIni")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaSoli")
                        .HasColumnType("datetime");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkPermiso");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Rol", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Usuario", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PkUsuario");

                    b.HasIndex("FkRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Direccion", b =>
                {
                    b.HasOne("ProyectoGestion_Ta.Entities.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("PkEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Empleado", b =>
                {
                    b.HasOne("ProyectoGestion_Ta.Entities.Cargo", "Cargos")
                        .WithMany("Empleados")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargos");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.EmpleadoCapacitacion", b =>
                {
                    b.HasOne("ProyectoGestion_Ta.Entities.Capacitacion", "Capacitacion")
                        .WithMany("EmpleadoCapacitaciones")
                        .HasForeignKey("CapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoGestion_Ta.Entities.Empleado", "Empleado")
                        .WithMany("EmpleadoCapacitaciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capacitacion");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Permiso", b =>
                {
                    b.HasOne("ProyectoGestion_Ta.Entities.Empleado", "Empleados")
                        .WithMany("permisos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Usuario", b =>
                {
                    b.HasOne("ProyectoGestion_Ta.Entities.Rol", "Roles")
                        .WithMany("Usuarios")
                        .HasForeignKey("FkRol");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Capacitacion", b =>
                {
                    b.Navigation("EmpleadoCapacitaciones");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Cargo", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Empleado", b =>
                {
                    b.Navigation("EmpleadoCapacitaciones");

                    b.Navigation("permisos");
                });

            modelBuilder.Entity("ProyectoGestion_Ta.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
